// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProtivitiTaskManagement.Models;

#nullable disable

namespace ProtivitiTaskManagement.Migrations
{
    [DbContext(typeof(UserDBContext))]
    [Migration("20230731094326_UpdatedNullableProperties")]
    partial class UpdatedNullableProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProtivitiTaskManagement.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CustomerDescription");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CustomerFirstName");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CustomerLastName");

                    b.Property<string>("CustomerMiddleName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CustomerMiddleName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ProtivitiTaskManagement.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"), 1L, 1);

                    b.Property<string>("TaskAssignee")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaskAssignee");

                    b.Property<string>("TaskCountry")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaskCounty");

                    b.Property<string>("TaskCustomer")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaskCustomer");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TaskDescription");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaskStatus");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaskTitle");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaskType");

                    b.HasKey("TaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ProtivitiTaskManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UserFirstName");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UserLastName");

                    b.Property<string>("UserMiddleName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UserMiddleName");

                    b.Property<string>("UserPassoword")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UserPassword");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UserRole");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
