<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}

.topnav {
  overflow: hidden;
  background-color: #333;
}

.topnav a {
  float: left;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

.topnav a:hover {
  background-color: #ddd;
  color: black;
}

.topnav a.active {
  background-color: #04AA6D;
  color: white;
}
</style>
</head>
<body>

<div class="topnav">
  <a class="active" href="#home">Dashboard</a>
        <a href="https://localhost:7001/home/UserMaster">User</a>
        <a href="https://localhost:7001/home/CustomerMaster">Customer</a>
  <a href="https://localhost:7001/home/TaskMaster">Task</a>
</div>

<div style="padding-left:16px">

</div>


    <div class="chartCard" style="margin:25px">
        <div class="chartBox">
            <canvas id="myChart"></canvas>
        </div>
    </div>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
    <script>
        // setup
        const data = {
            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
            datasets: [{
                label: 'Weekly Sales',
                data: [18, 12, 6, 9, 12, 6, 9],
                backgroundColor: [
                    'rgba(255, 26, 104, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(0, 0, 0, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 26, 104, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(0, 0, 0, 1)'
                ],
                borderWidth: 1
            }]
        };

        //AlwaysShowTooltip plugin block
        const alwaysShowTooltip = {
            id: 'alwaysShowTooltip',

            afterDraw(chart, args, options) {
                const { ctx } = chart;
                ctx.save();

                chart.data.datasets.forEach((dataset, i) => {
                    chart.getDatasetMeta(i).data.forEach((datapoint, index) => {
                        const { x, y } = datapoint.tooltipPosition();
                        console.log(datapoint.tooltipPosition());

                        const text = chart.data.labels[index] + ": " + chart.data.datasets[i].data[index];
                        const textWidth = ctx.measureText(text).width;

                        ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';
                        ctx.fillRect(x - ((textWidth + 10) / 2), y - 25, textWidth + 10, 20)
                        //x, y, width, height

                        //triangle
                        ctx.beginPath();
                        ctx.moveTo(x, y);
                        ctx.lineTo(x - 5, y - 5);
                        ctx.lineTo(x + 5, y - 5);
                        ctx.fill();
                        ctx.restore();

                        //text
                        ctx.font = '15px Arial';
                        ctx.fillStyle = 'white';
                        ctx.fillText(text, x - (textWidth / 2), y - 10)
                        ctx.restore();
                    })
                })
            }
        };



        // config
        const config = {
            type: 'line',
            data,
            options: {
                plugins: {
                    tooltip: {
                        enabled: false
                    },
                    legend: {
                        display: false,
                    }
                }
            },
            plugins: [alwaysShowTooltip]
        };

        // render init block
        const myChart = new Chart(
            document.getElementById('myChart'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');
        chartVersion.innerText = Chart.version;
    </script>





</body>
</html>
